{
  "workflows": {
    "Phase2_AIKeywordResearch": {
      "name": "Phase2_AIKeywordResearch_Daily",
      "meta": {
        "description": "AI-powered keyword research using Bedrock + Latitude prompts",
        "phase": "2 - Continuous Optimization",
        "frequency": "Daily at 6 AM",
        "estimatedRuntime": "20-30 minutes"
      },
      "nodes": [
        {
          "parameters": {
            "rule": {
              "interval": [
                {
                  "field": "cronExpression",
                  "expression": "0 6 * * *"
                }
              ]
            }
          },
          "id": "daily-keyword-trigger",
          "name": "Daily Keyword Research",
          "type": "n8n-nodes-base.cron",
          "position": [240, 300]
        },
        {
          "parameters": {
            "resource": "record",
            "operation": "list",
            "baseId": "={{$env.AIRTABLE_BASE_ID}}",
            "tableId": "seoData",
            "options": {
              "filterByFormula": "AND({Target Keywords} != '', {Last Updated} > DATEADD(TODAY(), -7, 'days'))"
            }
          },
          "id": "get-seed-keywords",
          "name": "Get Seed Keywords",
          "type": "n8n-nodes-base.airtable",
          "position": [460, 300]
        },
        {
          "parameters": {
            "url": "={{$env.FASTAPI_BASE_URL}}/api/v1/seo/keywords/research",
            "sendHeaders": true,
            "headerParameters": {
              "parameters": [
                {
                  "name": "Authorization",
                  "value": "Bearer {{$env.FASTAPI_API_TOKEN}}"
                },
                {
                  "name": "Content-Type",
                  "value": "application/json"
                }
              ]
            },
            "sendBody": true,
            "bodyParameters": {
              "parameters": [
                {
                  "name": "seed_keywords",
                  "value": "={{$json.records.map(r => r.fields['Target Keywords']).flat()}}"
                },
                {
                  "name": "competitor_domains",
                  "value": ["competitor1.com", "competitor2.com", "competitor3.com"]
                },
                {
                  "name": "difficulty_max",
                  "value": 70
                },
                {
                  "name": "volume_min",
                  "value": 100
                },
                {
                  "name": "intent_filter",
                  "value": "commercial,informational"
                },
                {
                  "name": "industry_focus",
                  "value": "AI automation for small businesses"
                },
                {
                  "name": "use_ai_analysis",
                  "value": true
                }
              ]
            }
          },
          "id": "ai-keyword-research",
          "name": "AI Keyword Research",
          "type": "n8n-nodes-base.httpRequest",
          "position": [680, 300]
        },
        {
          "parameters": {
            "functionCode": "// Process AI-enhanced keyword research results\nconst keywordData = items[0].json;\nconst opportunities = keywordData.opportunities || [];\nconst aiInsights = keywordData.ai_analysis || {};\n\nconst processedKeywords = [];\nconst highPriorityKeywords = [];\nconst contentSuggestions = [];\n\n// Process each keyword opportunity\nopportunities.forEach(keyword => {\n  const processed = {\n    keyword: keyword.keyword,\n    search_volume: keyword.search_volume,\n    difficulty: keyword.difficulty,\n    competition_level: keyword.competition_level,\n    intent: keyword.search_intent,\n    opportunity_score: keyword.opportunity_score,\n    \n    // AI-enhanced data\n    content_type_suggestion: keyword.ai_analysis?.recommended_content_type,\n    title_suggestions: keyword.ai_analysis?.title_ideas || [],\n    related_topics: keyword.ai_analysis?.related_topics || [],\n    seasonal_trends: keyword.ai_analysis?.seasonal_data,\n    competitor_gap: keyword.competitor_analysis?.gap_opportunity,\n    \n    // Business relevance scoring\n    business_relevance: calculateBusinessRelevance(keyword),\n    conversion_potential: keyword.ai_analysis?.conversion_likelihood || 'medium',\n    \n    // Implementation priority\n    implementation_priority: determinePriority(keyword),\n    estimated_traffic_gain: keyword.traffic_projection?.monthly_estimate,\n    content_investment_level: keyword.ai_analysis?.content_complexity || 'medium',\n    \n    // Date tracking\n    discovered_date: new Date().toISOString().split('T')[0],\n    status: 'Research Complete'\n  };\n  \n  processedKeywords.push(processed);\n  \n  // Identify high-priority opportunities\n  if (processed.opportunity_score > 75 && processed.business_relevance > 80) {\n    highPriorityKeywords.push(processed);\n  }\n  \n  // Generate content suggestions\n  if (processed.content_type_suggestion && processed.title_suggestions.length > 0) {\n    contentSuggestions.push({\n      keyword: processed.keyword,\n      content_type: processed.content_type_suggestion,\n      suggested_titles: processed.title_suggestions.slice(0, 3),\n      priority: processed.implementation_priority,\n      estimated_word_count: getWordCountEstimate(processed.content_type_suggestion),\n      target_audience: aiInsights.target_audience_analysis?.primary_audience,\n      competitive_advantage: keyword.ai_analysis?.differentiation_angle\n    });\n  }\n});\n\nfunction calculateBusinessRelevance(keyword) {\n  let score = 0;\n  \n  // Keyword relevance to AI automation\n  const aiTerms = ['ai', 'automation', 'artificial intelligence', 'machine learning', 'chatbot'];\n  const businessTerms = ['small business', 'sme', 'startup', 'entrepreneur'];\n  const serviceTerms = ['service', 'solution', 'consultant', 'expert', 'help'];\n  \n  const keywordLower = keyword.keyword.toLowerCase();\n  \n  if (aiTerms.some(term => keywordLower.includes(term))) score += 40;\n  if (businessTerms.some(term => keywordLower.includes(term))) score += 30;\n  if (serviceTerms.some(term => keywordLower.includes(term))) score += 20;\n  \n  // Search intent relevance\n  if (keyword.search_intent === 'commercial' || keyword.search_intent === 'transactional') score += 10;\n  \n  return Math.min(100, score);\n}\n\nfunction determinePriority(keyword) {\n  const score = keyword.opportunity_score;\n  const relevance = calculateBusinessRelevance(keyword);\n  const volume = keyword.search_volume;\n  \n  if (score > 80 && relevance > 70 && volume > 1000) return 'Critical';\n  if (score > 70 && relevance > 60 && volume > 500) return 'High';\n  if (score > 50 && relevance > 40) return 'Medium';\n  return 'Low';\n}\n\nfunction getWordCountEstimate(contentType) {\n  const estimates = {\n    'blog_post': 1500,\n    'guide': 2500,\n    'tutorial': 2000,\n    'comparison': 1800,\n    'listicle': 1200,\n    'faq': 800,\n    'landing_page': 1000\n  };\n  return estimates[contentType] || 1500;\n}\n\n// AI-powered competitive analysis summary\nconst competitiveInsights = {\n  total_opportunities: processedKeywords.length,\n  high_priority_count: highPriorityKeywords.length,\n  avg_opportunity_score: processedKeywords.reduce((sum, k) => sum + k.opportunity_score, 0) / processedKeywords.length,\n  content_gaps_identified: contentSuggestions.length,\n  \n  // Strategic recommendations from AI\n  strategic_focus_areas: aiInsights.strategic_recommendations?.focus_areas || [],\n  market_opportunities: aiInsights.market_analysis?.emerging_trends || [],\n  competitive_advantages: aiInsights.competitive_analysis?.unique_angles || [],\n  \n  // Next actions\n  immediate_actions: generateImmediateActions(highPriorityKeywords),\n  content_calendar_suggestions: generateContentCalendar(contentSuggestions)\n};\n\nfunction generateImmediateActions(highPriorityKeywords) {\n  const actions = [];\n  \n  highPriorityKeywords.slice(0, 5).forEach(keyword => {\n    actions.push(`Create ${keyword.content_type_suggestion} targeting \"${keyword.keyword}\"`);\n  });\n  \n  return actions;\n}\n\nfunction generateContentCalendar(suggestions) {\n  const calendar = [];\n  const prioritySuggestions = suggestions\n    .filter(s => s.priority === 'Critical' || s.priority === 'High')\n    .slice(0, 4);\n  \n  prioritySuggestions.forEach((suggestion, index) => {\n    const dueDate = new Date();\n    dueDate.setDate(dueDate.getDate() + (index + 1) * 7); // Weekly intervals\n    \n    calendar.push({\n      content_type: suggestion.content_type,\n      keyword: suggestion.keyword,\n      suggested_title: suggestion.suggested_titles[0],\n      due_date: dueDate.toISOString().split('T')[0],\n      estimated_hours: Math.ceil(suggestion.estimated_word_count / 300) // ~300 words/hour\n    });\n  });\n  \n  return calendar;\n}\n\nconsole.log(`Processed ${processedKeywords.length} keywords, ${highPriorityKeywords.length} high-priority opportunities`);\n\nreturn [\n  { json: { type: 'keywords', data: processedKeywords } },\n  { json: { type: 'high_priority', data: highPriorityKeywords } },\n  { json: { type: 'content_suggestions', data: contentSuggestions } },\n  { json: { type: 'insights', data: competitiveInsights } }\n];"
          },
          "id": "process-keyword-results",
          "name": "Process AI Keyword Results",
          "type": "n8n-nodes-base.function",
          "position": [900, 300]
        },
        {
          "parameters": {
            "resource": "record",
            "operation": "create",
            "baseId": "={{$env.AIRTABLE_BASE_ID}}",
            "tableId": "keywordOpportunities",
            "fields": {
              "fieldMappings": [
                {
                  "fieldId": "Keyword",
                  "fieldValue": "={{$json.data.keyword}}"
                },
                {
                  "fieldId": "Search Volume",
                  "fieldValue": "={{$json.data.search_volume}}"
                },
                {
                  "fieldId": "Difficulty",
                  "fieldValue": "={{$json.data.difficulty}}"
                },
                {
                  "fieldId": "Opportunity Score",
                  "fieldValue": "={{$json.data.opportunity_score}}"
                },
                {
                  "fieldId": "Business Relevance",
                  "fieldValue": "={{$json.data.business_relevance}}"
                },
                {
                  "fieldId": "Content Type",
                  "fieldValue": "={{$json.data.content_type_suggestion}}"
                },
                {
                  "fieldId": "Priority",
                  "fieldValue": "={{$json.data.implementation_priority}}"
                },
                {
                  "fieldId": "Status",
                  "fieldValue": "Research Complete"
                }
              ]
            }
          },
          "id": "save-keyword-opportunities",
          "name": "Save Keyword Opportunities",
          "type": "n8n-nodes-base.airtable",
          "position": [1120, 200]
        },
        {
          "parameters": {
            "resource": "record",
            "operation": "create",
            "baseId": "={{$env.AIRTABLE_BASE_ID}}",
            "tableId": "contentIdeas",
            "fields": {
              "fieldMappings": [
                {
                  "fieldId": "Keyword",
                  "fieldValue": "={{$json.data.keyword}}"
                },
                {
                  "fieldId": "Content Type",
                  "fieldValue": "={{$json.data.content_type}}"
                },
                {
                  "fieldId": "Suggested Title",
                  "fieldValue": "={{$json.data.suggested_titles[0]}}"
                },
                {
                  "fieldId": "Priority",
                  "fieldValue": "={{$json.data.priority}}"
                },
                {
                  "fieldId": "Estimated Word Count",
                  "fieldValue": "={{$json.data.estimated_word_count}}"
                },
                {
                  "fieldId": "Status",
                  "fieldValue": "Idea"
                }
              ]
            }
          },
          "id": "save-content-ideas",
          "name": "Save Content Ideas", 
          "type": "n8n-nodes-base.airtable",
          "position": [1120, 400]
        },
        {
          "parameters": {
            "conditions": {
              "options": {
                "caseSensitive": true,
                "leftValue": "",
                "typeValidation": "strict"
              },
              "conditions": [
                {
                  "leftValue": "={{$json.data.length}}",
                  "rightValue": "3",
                  "operator": {
                    "type": "number",
                    "operation": "gte"
                  }
                }
              ]
            }
          },
          "id": "check-high-priority",
          "name": "Check High Priority Count",
          "type": "n8n-nodes-base.if",
          "position": [900, 500]
        },
        {
          "parameters": {
            "channel": "#seo-opportunities",
            "text": "🎯 High-Priority Keyword Opportunities Discovered!\n\n**Total Opportunities:** {{$json.data.total_opportunities}}\n**High Priority:** {{$json.data.high_priority_count}}\n**Avg Opportunity Score:** {{Math.round($json.data.avg_opportunity_score)}}/100\n\n**Immediate Actions:**\n{{$json.data.immediate_actions.slice(0,3).join('\\n')}}\n\n**Strategic Focus Areas:**\n{{$json.data.strategic_focus_areas.join(', ')}}\n\n*Review detailed opportunities in Airtable*"
          },
          "id": "high-priority-alert",
          "name": "High Priority Alert",
          "type": "n8n-nodes-base.slack",
          "position": [1120, 500]
        }
      ],
      "connections": {
        "Daily Keyword Research": {
          "main": [
            [{"node": "Get Seed Keywords", "type": "main", "index": 0}]
          ]
        },
        "Get Seed Keywords": {
          "main": [
            [{"node": "AI Keyword Research", "type": "main", "index": 0}]
          ]
        },
        "AI Keyword Research": {
          "main": [
            [{"node": "Process AI Keyword Results", "type": "main", "index": 0}]
          ]
        },
        "Process AI Keyword Results": {
          "main": [
            [
              {"node": "Save Keyword Opportunities", "type": "main", "index": 0},
              {"node": "Save Content Ideas", "type": "main", "index": 0},
              {"node": "Check High Priority Count", "type": "main", "index": 0}
            ]
          ]
        },
        "Check High Priority Count": {
          "main": [
            [{"node": "High Priority Alert", "type": "main", "index": 0}]
          ]
        }
      }
    },

    "Phase2_ContentOptimization": {
      "name": "Phase2_ContentOptimization_OnPublish",
      "meta": {
        "description": "AI-powered content optimization using Claude Opus via Bedrock",
        "phase": "2 - Continuous Optimization", 
        "frequency": "Triggered on content publish",
        "estimatedRuntime": "10-15 minutes"
      },
      "nodes": [
        {
          "parameters": {
            "httpMethod": "POST",
            "path": "content-optimization",
            "options": {}
          },
          "id": "content-webhook",
          "name": "Content Published Webhook",
          "type": "n8n-nodes-base.webhook",
          "position": [240, 300]
        },
        {
          "parameters": {
            "resource": "record",
            "operation": "read",
            "baseId": "={{$env.AIRTABLE_BASE_ID}}",
            "tableId": "contentBlocks",
            "recordId": "={{$json.body.recordId}}"
          },
          "id": "get-content-details",
          "name": "Get Content Details",
          "type": "n8n-nodes-base.airtable",
          "position": [460, 300]
        },
        {
          "parameters": {
            "resource": "record",
            "operation": "list",
            "baseId": "={{$env.AIRTABLE_BASE_ID}}",
            "tableId": "seoData",
            "options": {
              "filterByFormula": "FIND('{{$json.fields['Block Name']}}', {Used On Pages}) > 0"
            }
          },
          "id": "get-seo-context",
          "name": "Get SEO Context",
          "type": "n8n-nodes-base.airtable",
          "position": [460, 200]
        },
        {
          "parameters": {
            "url": "={{$env.FASTAPI_BASE_URL}}/api/v1/seo/analyze",
            "sendHeaders": true,
            "headerParameters": {
              "parameters": [
                {
                  "name": "Authorization",
                  "value": "Bearer {{$env.FASTAPI_API_TOKEN}}"
                },
                {
                  "name": "Content-Type",
                  "value": "application/json"
                }
              ]
            },
            "sendBody": true,
            "bodyParameters": {
              "parameters": [
                {
                  "name": "content",
                  "value": "={{$json.fields.Content}}"
                },
                {
                  "name": "content_id",
                  "value": "={{$json.id}}"
                },
                {
                  "name": "target_keywords",
                  "value": "={{$runData['Get SEO Context'][0]?.json?.records?.[0]?.fields?.['Target Keywords'] || []}}"
                },
                {
                  "name": "content_type",
                  "value": "={{$json.fields['Block Type']}}"
                },
                {
                  "name": "analysis_depth",
                  "value": "comprehensive"
                },
                {
                  "name": "competitor_urls", 
                  "value": []
                },
                {
                  "name": "optimization_goals",
                  "value": ["seo_score", "readability", "conversion"]
                }
              ]
            }
          },
          "id": "ai-content-analysis",
          "name": "AI Content Analysis",
          "type": "n8n-nodes-base.httpRequest",
          "position": [680, 300]
        },
        {
          "parameters": {
            "conditions": {
              "options": {
                "caseSensitive": true,
                "leftValue": "",
                "typeValidation": "strict"
              },
              "conditions": [
                {
                  "leftValue": "={{$json.analysis.seo_score}}",
                  "rightValue": "80",
                  "operator": {
                    "type": "number",
                    "operation": "lt"
                  }
                }
              ]
            }
          },
          "id": "check-optimization-needed",
          "name": "Check If Optimization Needed",
          "type": "n8n-nodes-base.if",
          "position": [900, 300]
        },
        {
          "parameters": {
            "url": "={{$env.FASTAPI_BASE_URL}}/api/v1/seo/generate",
            "sendHeaders": true,
            "headerParameters": {
              "parameters": [
                {
                  "name": "Authorization",
                  "value": "Bearer {{$env.FASTAPI_API_TOKEN}}"
                },
                {
                  "name": "Content-Type",
                  "value": "application/json"
                }
              ]
            },
            "sendBody": true,
            "bodyParameters": {
              "parameters": [
                {
                  "name": "brief",
                  "value": "Optimize this content for better SEO performance while maintaining quality and readability. Original content: {{$runData['Get Content Details'][0].json.fields.Content}}"
                },
                {
                  "name": "content_type",
                  "value": "{{$runData['Get Content Details'][0].json.fields['Block Type']}}"
                },
                {
                  "name": "target_keywords",
                  "value": "={{$runData['Get SEO Context'][0]?.json?.records?.[0]?.fields?.['Target Keywords'] || []}}"
                },
                {
                  "name": "target_word_count",
                  "value": "={{Math.max(500, $runData['Get Content Details'][0].json.fields.Content.split(' ').length)}}"
                },
                {
                  "name": "tone",
                  "value": "professional"
                },
                {
                  "name": "target_audience",
                  "value": "small_business_owners"
                },
                {
                  "name": "quality_level",
                  "value": "high"
                },
                {
                  "name": "optimization_focus",
                  "value": ["keyword_optimization", "readability", "meta_tags", "internal_linking"]
                }
              ]
            }
          },
          "id": "generate-optimized-content",
          "name": "Generate Optimized Content",
          "type": "n8n-nodes-base.httpRequest",
          "position": [1120, 300]
        }
      ],
      "connections": {
        "Content Published Webhook": {
          "main": [
            [
              {"node": "Get Content Details", "type": "main", "index": 0},
              {"node": "Get SEO Context", "type": "main", "index": 0}
            ]
          ]
        },
        "Get Content Details": {
          "main": [
            [{"node": "AI Content Analysis", "type": "main", "index": 0}]
          ]
        },
        "AI Content Analysis": {
          "main": [
            [{"node": "Check If Optimization Needed", "type": "main", "index": 0}]
          ]
        },
        "Check If Optimization Needed": {
          "main": [
            [{"node": "Generate Optimized Content", "type": "main", "index": 0}]
          ]
        }
      }
    },

    "Phase2_PerformanceTracking": {
      "name": "Phase2_PerformanceTracking_Daily",
      "meta": {
        "description": "Daily performance monitoring with Google Analytics and Search Console",
        "phase": "2 - Continuous Optimization",
        "frequency": "Daily at 8 AM",
        "estimatedRuntime": "15-20 minutes"
      },
      "nodes": [
        {
          "parameters": {
            "rule": {
              "interval": [
                {
                  "field": "cronExpression",
                  "expression": "0 8 * * *"
                }
              ]
            }
          },
          "id": "daily-performance-trigger",
          "name": "Daily Performance Check",
          "type": "n8n-nodes-base.cron",
          "position": [240, 300]
        },
        {
          "parameters": {
            "url": "={{$env.FASTAPI_BASE_URL}}/api/v1/analytics/performance",
            "sendHeaders": true,
            "headerParameters": {
              "parameters": [
                {
                  "name": "Authorization",
                  "value": "Bearer {{$env.FASTAPI_API_TOKEN}}"
                }
              ]
            },
            "sendBody": true,
            "bodyParameters": {
              "parameters": [
                {
                  "name": "date_range",
                  "value": "yesterday"
                },
                {
                  "name": "metrics",
                  "value": ["organic_traffic", "rankings", "click_through_rate", "conversions"]
                },
                {
                  "name": "include_comparisons",
                  "value": true
                },
                {
                  "name": "alert_thresholds",
                  "value": {
                    "traffic_drop": 20,
                    "ranking_drop": 5,
                    "ctr_drop": 15
                  }
                }
              ]
            }
          },
          "id": "get-performance-data",
          "name": "Get Performance Data",
          "type": "n8n-nodes-base.httpRequest",
          "position": [460, 300]
        },
        {
          "parameters": {
            "resource": "record",
            "operation": "update",
            "baseId": "={{$env.AIRTABLE_BASE_ID}}",
            "tableId": "performanceMetrics",
            "fields": {
              "fieldMappings": [
                {
                  "fieldId": "Date",
                  "fieldValue": "={{new Date().toISOString().split('T')[0]}}"
                },
                {
                  "fieldId": "Organic Traffic",
                  "fieldValue": "={{$json.metrics.organic_traffic}}"
                },
                {
                  "fieldId": "Average Position",
                  "fieldValue": "={{$json.metrics.average_position}}"
                },
                {
                  "fieldId": "Click Through Rate",
                  "fieldValue": "={{$json.metrics.click_through_rate}}"
                },
                {
                  "fieldId": "Conversions",
                  "fieldValue": "={{$json.metrics.conversions}}"
                },
                {
                  "fieldId": "Performance Score",
                  "fieldValue": "={{$json.performance_score}}"
                }
              ]
            }
          },
          "id": "update-performance-metrics",
          "name": "Update Performance Metrics",
          "type": "n8n-nodes-base.airtable",
          "position": [680, 300]
        }
      ],
      "connections": {
        "Daily Performance Check": {
          "main": [
            [{"node": "Get Performance Data", "type": "main", "index": 0}]
          ]
        },
        "Get Performance Data": {
          "main": [
            [{"node": "Update Performance Metrics", "type": "main", "index": 0}]
          ]
        }
      }
    }
  }
}
